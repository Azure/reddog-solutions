spring:
  application:
    name: makeline-service
  main:
    allow-bean-definition-overriding: true
  banner:
    location: static/banner.txt
  redis:
    host: ${AZURE_REDIS_HOST}
    port: ${AZURE_REDIS_PORT}
    password: ${AZURE_REDIS_ACCESS_KEY}
    ssl: true
    connect-timeout: 5000
#  cloud:
#    stream:
#      default-binder: kafka
  kafka:
    topic:
      name: ${KAFKA_TOPIC_NAME:reddogoct3}
      completed-orders-name: ${KAFKA_COMPLETED_ORDERS_TOPIC:orderscompleted}
      group: ${KAFKA_TOPIC_GROUP:makeline-service}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        sasl:
          mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
          jaas:
            config: ${KAFKA_SASL_JAAS_CONFIG}
        spring:
          json:
            type:
              mapping: ordersummary:com.microsoft.gbb.rasa.makelineservice.dto.OrderSummaryDto
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:makelineservice}
      auto-offset-reset: latest
      properties:
        spring:
          json:
            trusted.packages: "*"
            type.mapping: ordersummary:com.microsoft.gbb.rasa.makelineservice.dto.OrderSummaryDto
        sasl:
          jaas:
            config: ${KAFKA_SASL_JAAS_CONFIG}
          mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
messaging:
  pubsub:
    enabled: true
    TOPIC_NAME: makeline-service-topic
    SUB_NAME: pubsub
cosmos:
  uri: ${AZURE_COSMOSDB_URI}
  key: ${AZURE_COSMOSDB_KEY}
  secondaryKey: ${AZURE_COSMOSDB_SECONDARY_KEY}
  databaseName: ${AZURE_COSMOSDB_DATABASE_NAME}
  queryMetricsEnabled: true
  containerName: ${AZURE_COSMOSDB_CONTAINER_NAME:reddog}
  requestUnits: ${AZURE_COSMOSDB_REQUEST_UNITS:400}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
server:
  port: 8084

---
spring:
  profiles: dev
  application:
    name: makeline-service