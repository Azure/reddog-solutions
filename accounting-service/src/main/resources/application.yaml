spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: ordersummary:com.microsoft.gbb.rasa.accountingservice.dto.OrderSummaryDto
        sasl:
          mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
          jaas:
            config: ${KAFKA_SASL_JAAS_CONFIG}
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
  config:
    import: optional:classpath:.env[.properties]
  banner:
    location: static/banner.txt
cosmos:
  queryMetricsEnabled: 'true'
  key: ${AZURE_COSMOSDB_KEY}
  secondaryKey: ${AZURE_COSMOSDB_SECONDARY_KEY}
  databaseName: ${AZURE_COSMOSDB_DATABASE_NAME}
  uri: ${AZURE_COSMOSDB_URI}
eureka:
  client:
    fetch-registry: 'false'
    register-with-eureka: 'false'
server:
  port: '8087'
topic:
  name:
    producer: ${KAFKA_TOPIC_NAME:reddog.orders}
logging:
  level:
    org:
      hibernate:
        stat: DEBUG
        SQL: DEBUG
