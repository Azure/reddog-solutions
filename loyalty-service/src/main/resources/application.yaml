spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: loyalty-service
  banner:
    location: static/banner.txt
  redis:
    host: ${AZURE_REDIS_HOST}
    port: ${AZURE_REDIS_PORT}
    password: ${AZURE_REDIS_ACCESS_KEY}
    ssl: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:loyaltyservice}
      auto-offset-reset: latest
      properties:
        spring:
          json:
            trusted.packages: "*"
            type.mapping: ordersummary:com.microsoft.gbb.reddog.loyaltyservice.dto.OrderSummaryDto
        sasl:
          jaas.config: ${KAFKA_SASL_JAAS_CONFIG}
          mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
data:
  topic:
    name: ${KAFKA_TOPIC_NAME:reddog.orders}
    group: ${KAFKA_TOPIC_GROUP:loyalty-service}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
server:
  port: 8083

---
spring:
  profiles: dev
  application:
    name: loyalty-service